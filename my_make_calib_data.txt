* camera_calibration_multi_image2.hdev

dev_close_window()
dev_open_window(75, 250, 1280, 960, 'black', windowHandle)
dev_update_off()
dev_set_draw('margin')
dev_set_line_width(3)
set_display_font (windowHandle, 22, 'mono', 'true', 'false')

* calibrate the camera
create_calib_data('calibration_object', 1, 1, calibDataID)

camParams := [0.012, 0, 0.00000375, 0.00000375, 640, 480, 1280, 960]
set_calib_data_cam_param(calibDataID, 0, 'area_scan_division', camParams)

set_calib_data_calib_object(calibDataID, 0, 'calplate_80mm.cpd')

* loop through the 7 image files, 'calib_image_01.png' through 'calib_image_07.png'
for i := 1 to 7 by 1
    read_image(imgOriginal, 'calib_image_0' + i + '.png')
    dev_display (imgOriginal)
    
    find_calib_object(imgOriginal, calibDataID, 0, 0, i, [], [])
    
    get_calib_data_observ_contours(xldContours, calibDataID, 'caltab', 0, 0, i)
    
    get_calib_data_observ_points(calibDataID, 0, 0, i, rows, columns, indices, startPoses)
    
    dev_set_color('green')
    dev_display(xldContours)
    
    dev_set_color('red')
    disp_circle(windowHandle, rows, columns, gen_tuple_const(|rows|, 1.5))
endfor

calibrate_cameras(calibDataID, errors)

get_calib_data(calibDataID, 'camera', 0, 'params', camParam)

* the reference image, i.e., the image in which the calibration plate is located on the ruler is the first image
get_calib_data(calibDataID, 'calib_obj_pose', [0, 1], 'pose', poseData)

* to take the thickness of the calibration plate into account, the z-value of the origin given by the camera pose has to be translated by the thickness of the calibration plate
* deactivate the following line if you do not want to add the correction
set_origin_pose(poseData, 0, 0, 0.002, poseData)

* measure the distance between the pitch lines
read_image (imgRuler, 'ruler.png')
dev_display (imgRuler)

gen_measure_rectangle2 (690, 680, rad(-0.25), 480, 8, 1280, 960, 'bilinear', measureHandle)

measure_pairs (imgRuler, measureHandle, 0.5, 5, 'all', 'all', RowEdgeFirst, ColumnEdgeFirst, AmplitudeFirst, RowEdgeSecond, ColumnEdgeSecond, AmplitudeSecond, IntraDistance, InterDistance)

rows := (RowEdgeFirst + RowEdgeSecond) / 2.0
cols := (ColumnEdgeFirst + ColumnEdgeSecond) / 2.0

disp_cross(windowHandle, rows, cols, 20, rad(45))

image_points_to_world_plane (camParam, poseData, rows, cols, 'mm', x1s, y1s)

distance_pp(x1s[0:11], y1s[0:11], x1s[1:12], y1s[1:12], distances)

tuple_mean(distances, meanDistance)

tuple_deviation(distances, deviationDistance)

disp_message(windowHandle, 'Mean distance: ' + meanDistance$'.3f' + 'mm +/- ' + deviationDistance$'.3f' + 'mm', 'window', 30, 60, 'yellow', 'false')

close_measure(measureHandle)

clear_calib_data(calibDataID)











